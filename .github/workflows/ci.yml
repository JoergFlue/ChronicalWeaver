name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.11, 3.13]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Install project
      run: poetry install --no-interaction

    - name: Lint with flake8
      run: |
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    - name: Format check with black
      run: poetry run black --check .

    - name: Type check with mypy
      run: poetry run mypy . --ignore-missing-imports
      continue-on-error: true

    - name: Test with pytest
      run: |
        poetry run pytest --cov=chronicle_weaver --cov-report=xml --cov-report=term-missing
      env:
        QT_QPA_PLATFORM: offscreen

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.13'
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  build:
    runs-on: windows-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: 3.13

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Install dependencies
      run: poetry install --no-interaction

    - name: Build application
      run: |
        poetry run pip install pyinstaller
        poetry run pyinstaller --onedir --windowed --name ChronicleWeaver main.py
      continue-on-error: true

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      if: success()
      with:
        name: chronicle-weaver-build
        path: dist/
